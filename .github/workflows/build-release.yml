# documentation: https://github.com/deltachat/sysadmin/tree/master/download.delta.chat
name: Build & Upload Release

on:
  pull_request:  # testing
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Get Pullrequest ID
      id: prepare
      run: |
        export TAG=$(echo "${{ github.ref }}" | cut -d '/' -f3)
        echo ::set-output name=tag::$TAG
        #export SHA=$(jq .pull_request.head.sha < $GITHUB_EVENT_PATH)
        #echo ::set-output name=sha::$SHA
    - name: install wine
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install --yes wine-stable wine32
    - uses: actions/checkout@v1
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: npm install, build, test
      run: |
        npm install
        npm run build
    - name: electron builder
      run: npx electron-builder --linux --win portable --mac mas || true
    - name: renaming
      run: |
        cd dist
        mkdir release
        mv *.AppImage release/DeltaChat-${{ steps.prepare.outputs.tag }}.AppImage
        mv *.deb release/DeltaChat-${{ steps.prepare.outputs.tag }}.deb
        mv *.exe release/DeltaChat-${{ steps.prepare.outputs.tag }}.exe
        mv win-unpacked release/
        ls release
        cd ..
    - name: compressing mas
      run: zip -r dist/release/DeltaChat-mas-${{ steps.prepare.outputs.tag }}.zip dist/mas
    - name: upload folder
      uses: horochx/deploy-via-scp@v1.0.1
      with:
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        host: "download.delta.chat"
        port: 22
        local: "dist/release/*"
        remote: "/var/www/html/download/desktop/"
